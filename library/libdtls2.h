/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package: dtls */

/* Start of preamble from import "C" comments.  */

#include <stdlib.h>

/* End of preamble from import "C" comments.  */

#ifdef __cplusplus
extern "C"
{
#endif

    extern int GetHashAlgorithmValue(unsigned char alg);
    extern unsigned char *generateValueKeyMessage(unsigned char *clientRandom, size_t clientLen, unsigned char *serverRandom, size_t serverLen, unsigned char *publicKey, size_t publicLen);
    extern int PHash(unsigned char *secret, size_t secretLen, unsigned char *seed, size_t seedLen, size_t requestedLength, unsigned char **out, size_t *outLen);
    extern int VerifyFinishedData(unsigned char *handshakeMessages, size_t handshakeLen, unsigned char *serverMasterSecret, size_t masterSecretLen, unsigned char **out, size_t *outLen);
    extern int GenerateServerCertificate(const char *cn, unsigned char **certPEM, size_t *certPEMLen, unsigned char **privateKey, size_t *privateKeyLen);
    extern int GenerateCurveKeypair(unsigned char **publicKey, size_t *publicKeyLen, unsigned char **privateKey, size_t *privateKeyLen);
    extern int GenerateKeySignature(unsigned char *clientRandom, size_t clientLen, unsigned char *serverRandom, size_t serverLen, unsigned char *publicKey, size_t publicLen, unsigned char *privateKey, size_t privateKeyLen, unsigned char **signedData, size_t *signedLen);
    extern char *GetCertificateFingerprintFromBytes(unsigned char *certificate, size_t certLen);
    extern int GeneratePreMasterSecret(unsigned char *publicKey, size_t publicKeyLen, unsigned char *privateKey, size_t privateKeyLen, unsigned char **preMasterSecret, size_t *preMasterSecretLen);
    extern int VerifyCertificate(unsigned char *handshakeMessages, size_t handshakeLen, unsigned char *clientSignature, size_t signatureLen, unsigned char **clientCertificates, size_t certCount);

#ifdef __cplusplus
}
#endif
