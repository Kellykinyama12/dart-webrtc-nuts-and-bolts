import 'dart:ffi';
import 'package:ffi/ffi.dart'; // For memory allocation and Utf8 conversion
import 'package:dart_webrtc_nuts_and_bolts/bindings3.dart'; // Assuming this contains the generated bindings

void main() {
  // Load the dynamic library
  final dylib = DynamicLibrary.open('library/libdtls.dll');

  // Assuming `NativeLibrary` is a class generated by `ffigen` from your bindings
  final lib = NativeLibrary(dylib);

  // Convert Dart string to GoString
  final host = 'localhost'.toNativeUtf8(); // Convert to Utf8 pointer
  final goString = calloc<GoString>() // Allocate memory for GoString
    ..ref.p = host.cast<Char>() // Assign the Utf8 pointer to the `p` field
    ..ref.n = host.length; // Assign the string length to the `n` field

  try {
    // Call the `GenerateServerCertificate` function
    final result = lib.GenerateServerCertificate(goString.ref);

    // Handle the result (example: printing the certificate slice length)
    print('Certificate Slice Length: ${result.r0.len}');
    print('Additional Data Slice Length: ${result.r1.len}');
    if (result.r2.v != nullptr) {
      print('Error: Found non-null value in GoInterface');
    }
  } catch (e) {
    print('Error calling GenerateServerCertificate: $e');
  } finally {
    // Free the allocated memory
    calloc.free(goString);
    calloc.free(host);
  }
}
